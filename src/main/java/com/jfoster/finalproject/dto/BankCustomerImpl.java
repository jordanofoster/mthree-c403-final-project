package com.jfoster.finalproject.dto;

import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.persistence.*;
import jakarta.validation.constraints.*;


/**
 * DTO class implementation that represents a bank customer record within the customers table.
 */
@Entity(name="customers")
public class BankCustomerImpl implements BankCustomer {


    /**
     * Primary key of the entity.
     * Not provided by the user at the controller level; this is auto-generated by the repository.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @JsonProperty("customer_reference_number")
    @Column(nullable = false)
    private Long customerReferenceNumber;

    /**
     * Full name of the customer.
     * Maximum length of 45 characters, as defined within table as VARCHAR(45).
     * Must not be null at controller-level.
     */
    @JsonProperty("name")
    @NotNull
    @Size(max=45)
    @Column(nullable = false)
    private String name;

    /**
     * Residential address of the customer.
     * Maximum length of 45 characters, as defined within table as VARCHAR(45).
     * Must not be null at controller-level.
     */
    @JsonProperty("address")
    @NotNull
    @Size(max=45)
    @Column(nullable = false)
    private String address;

    /**
     * Phone number of the customer.
     * Maximum length of 25 characters, as defined within table as VARCHAR(25).
     * Must not be null at controller-level.
     */
    @JsonProperty("phone_number")
    @NotNull
    @Size(max=25)
    @Column(nullable = false)
    private String phoneNumber;

    /**
     * E-mail address of the customer.
     * Maximum length of 254 characters, as defined within table as VARCHAR(254) and within the relevant RFC.
     * Must not be null at controller-level.
     */
    @JsonProperty("email")
    @Email
    @NotNull
    @Size(max=254)
    @Column(nullable = false)
    private String email;

    public BankCustomerImpl(){}

    public BankCustomerImpl(String name, String address, String phoneNumber, String email) {
        this.name = name;
        this.address = address;
        this.phoneNumber = phoneNumber;
        this.email = email;
    }

    /**
     * Gets the customer reference number of the entity.
     * @return Long object representing the customer reference number (represented within customers as BIGINT).
     */
    @Override
    public Long getCustomerReferenceNumber() {
        return this.customerReferenceNumber;
    }

    /**
     * Gets the full name of the customer.
     * @return String object representing the customer's full name (represented within customers as VARCHAR(45)).
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Sets the full name of the customer.
     * @param name String to set the entity variable to.
     */
    @Override
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Gets the phone number of the customer.
     * @return String object representing the customer's phone number (represented within customers as VARCHAR(25)).
     */
    @Override
    public String getPhoneNumber() {
        return this.phoneNumber;
    }

    /**
     * Sets the phone number of the customer.
     * @param phoneNumber String to set the entity variable to.
     */
    @Override
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    /**
     * Gets the e-mail address of the customer.
     * @return String object representing the customer's e-mail address (represented within customers as VARCHAR(254)).
     */
    @Override
    public String getEmail() {
        return this.email;
    }

    /**
     * Sets the e-mail address of the customer.
     * @param email String to set the entity variable to.
     */
    @Override
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Gets the residential address of the customer.
     * @return String object representing the customer's address (represented within customers as VARCHAR(45)).
     */
    @Override
    public String getAddress() {
        return this.address;
    }

    /**
     * Sets the residential address of the customer.
     * @param address String to set the entity variable to.
     */
    @Override
    public void setAddress(String address) {
        this.address = address;
    }
}
